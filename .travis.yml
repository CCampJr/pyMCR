# http://lmjohns3.com/2015/06/using-travis-ci-with-miniconda-scipy-and-nose.html

language: python
matrix:
  include:
  - os: linux
    dist: trusty
    sudo: false
    python: '3.4'
  - os: linux
    dist: trusty
    sudo: false
    python: '3.5'
  - os: linux
    dist: trusty
    sudo: false
    python: '3.6'
  - os: linux
    dist: trusty
    sudo: false
    python: 3.6-dev
cache:
  apt: true
  pip: true
  ccache: true
  directories:
  
addons:
  apt:
    packages:
    - libatlas-dev
    - libatlas-base-dev
    - liblapack-dev
    - gfortran

before_install:
# - if [[ "$TRAVIS_PYTHON_VERSION" == "3.4" && "$TRAVIS_PYTHON_VERSION" == "3.5" ]];
  # then wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
  # bash miniconda.sh -b -p $HOME/miniconda;
  # export PATH="$HOME/miniconda/bin:$PATH";
  # conda update --yes conda; 
  # fi
# - pip install matplotlib
# - pip install sphinx
# - pip install numpydoc
# - pip install sphinx_rtd_theme
install:
- pip install -qq --upgrade pip setuptools wheel
- if [[ "$TRAVIS_PYTHON_VERSION" == "3.4" && "$TRAVIS_PYTHON_VERSION" == "3.5" ]];
  then pip install -qq --only-binary=numpy,scipy numpy;
  fi
  # then conda install --yes python=$TRAVIS_PYTHON_VERSION pip numpy scipy;
  # fi
- pip install pytest-cov
- if [[ "$TRAVIS_PYTHON_VERSION" == "3.6" ]];
  then pip install codecov;
  fi
- python setup.py install
# - python setup.py sdist
# - cd $TRAVIS_BUILD_DIR/docs/
# - sphinx-apidoc -o ./source ../sciplot
# - make html
# - pip uninstall -y sciplot-pyqt
# - cd $TRAVIS_BUILD_DIR
# - python setup.py install
script:
- pytest --cov=./

after_success:
- if [[ "$TRAVIS_PYTHON_VERSION" == "3.6" ]];
  then codecov;
  fi
# branches:
#   only:
#   - master
#   - dev

deploy:
  provider: pypi
  server: https://test.pypi.org/legacy/ # Remove this line for official deployment
  user: ccampjr
  password:
    # TestPyPi password 
    secure: cv6AjbFzNXOQDLsppmPKIbosSoJ4LzT51crxZ9OqJdy2OGzLOP5cWav+OIBWP/HHH7oIYHqS0EohQdC7kd6w5zAvjrP1jjEi044QV0+kocPYZSU/8GHtpUawU6Awy0ZIYzcs86gDLidVQzMheCrKh/DwdptncWE8jFr7g6XsZMBn/Mjt9jRsUViidOE5Xw9KFyGmQD5W79gfkqtBdNujxfh7gCmlHv6V44susrCNR4jo++BkWgX4sZHPd0Bb8j3VUtXC3vuMISGYXdYMZHjrKslZ4MxZ/PdHKVVn4awjcD6t/rkD0ld1yymtnkUpbGLRBuLQWVHFCUatOzqSQUUTEsfJkwEpR+LoPVVLWxK4uGYHaLRL18FBdxD0ItuRJF/rEZP4ODJ9UEKnTMU5IT1gDuZNbNBn199vVpzQeq5adxtKamePhD7c83jbkUZH/2pEEAJfPtLNdu5Xf/6aj99OQSAe3wpta2AhRF5ogoGl++/fxh76xxazr4AWeWQR0lu3hUUklZoouNpommV3IVhY2wm9pkbp8v/PsMCjwmLvl8wgyduKrSVXoXSIc633w1TvlXcUr+3jPeir3iVyqlmdwKvDQTls7oMJKjFXxo7bzFgIYcEgZV9+DEQWpEwLrCzbXZjPkxihz0khDZGT8Q1MD71JPDE2s4AyV+QqmW/uM60=
  
    # PyPi
    # secure: N8hswlUiEnQCkEamgnDoCkdsIuGPwmHRe0/bE5cPcdas+92wzQl/9FyvBCN3EKjOTxCDMPPPTzOsaJo/RfIPuTKiKsOZCsqLR2rKW3rGrHUWlXIhW6FjCBvwIlqpbvwhMA9Soiv+XlsRfEpEIpj8DJeLYAXUb8hmuQNLP/PHPwGm33VCOEYPhWUX8ypCTpkPxzYA2eM9uBzTUYiCHINlYkDMqpmIPiBVHw/N/s2UDpSFRpCv5XkIpA3LFPhiY9LQxbTMAVD4kmnJ8e/8FJ7nRBnDH5S9dEPBx6B2QCMTEULWzxlyy8r8iGg1HmtR2WI2KxnikRnFmXXEsxE76vAQfFIi8uzXVXYM6MEd4CaPkRKWnC8Tikw43f/2lPJjTD7h4T30uH+mWDeWaWYBwnZ/091UzgZieiuL1e1rYIZZoozmIE5CQps3HQaO0DPkbMASLbOXehDwGEIJyJNwP/bFCSE1aopevGa/Do+y+YX+OdciEkvGwvewfKiAw5vpGl8UkvJo8/CEl7L1OQWo/Rr2UOYFb2BNcRi8Oox7515sNIdyM2QBMbJdhEoYweHenBY4rDlWl+ZkBJk0zDUaYJZPJQbkVQXuanxIfSlgJHtBMb9cz1BWMTd/cXPXNrABgmxAG6EVPU//NPUPXxU71xvbCH1Lw3w7FoOIs18L1b4loyo=
on:
    tags: true
    python: 3.6